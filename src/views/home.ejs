<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Enhanced To-Do List</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="/socket.io/socket.io.js"></script>
</head>

<body class="bg-gradient-to-r from-blue-600 to-purple-700 min-h-screen flex items-center justify-center">
    <div class="max-w-md w-full bg-white/30 backdrop-blur-lg shadow-lg rounded-lg p-6 mt-10">
        <h1 class="text-gray-900 font-bold text-3xl text-center mb-4">‚ú® To-Do List ‚ú®</h1>

        <form class="flex items-center space-x-2 mb-4" onsubmit="addTodo(event)">
            <input id="newTask"
                class="flex-1 bg-white border border-gray-300 text-gray-700 p-2 rounded focus:outline-none" type="text"
                placeholder="Add a task">
            <button class="bg-green-500 text-white px-3 py-2 rounded hover:bg-green-600" type="submit">
                ‚ûï Add
            </button>
        </form>

        <div class="flex justify-between items-center mb-4">
            <select id="filter" class="p-2 rounded border text-gray-700" onchange="filterTodos()">
                <option value="all">All</option>
                <option value="pending">Pending</option>
                <option value="completed">Completed</option>
            </select>
            <button class="bg-red-500 text-white px-3 py-2 rounded hover:bg-red-600" onclick="clearAllTasks()">
                üóëÔ∏è Clear All
            </button>
        </div>

        <ul id="todoList" class="divide-y divide-gray-300"></ul>
    </div>

    <script>
        const socket = io();

        socket.emit('fetchTodos');

        socket.on('todos_updated', (data) => {
            if (data.status === 'success') {
                updateTodoList(data.data);
            } else {
                console.error('Error updating todos:', data.message);
            }
        });

        function updateTodoList(todos) {
            const todoList = document.getElementById('todoList');
            todoList.innerHTML = '';
            todos.forEach((todo) => {
                const listItem = `
                    <li class="py-3 px-3 flex justify-between items-center bg-white rounded shadow-md my-2 transition-all hover:scale-105">
                        <div class="flex items-center">
                            <input id="todo_${todo._id}" type="checkbox" class="h-5 w-5 text-green-600"
                                onchange="toggleStatus('${todo._id}', this.checked)" 
                                ${todo.status === 'completed' ? 'checked' : ''}>
                            <span class="ml-3 text-lg font-medium text-gray-900 ${todo.status === 'completed' ? 'line-through text-gray-500' : ''}">
                                ${todo.task}
                            </span>
                        </div>
                        <div class="flex space-x-2">
                            <button class="text-blue-500 hover:text-blue-700" onclick="editTodo('${todo._id}', '${todo.task}')">
                                ‚úèÔ∏è
                            </button>
                            <button class="text-red-500 hover:text-red-700" onclick="deleteTodo('${todo._id}')">
                                ‚ùå
                            </button>
                        </div>
                    </li>`;
                todoList.insertAdjacentHTML('beforeend', listItem);
            });
        }

        function addTodo(e) {
            e.preventDefault();
            const taskValue = document.getElementById('newTask');
            const task = taskValue.value.trim();
            if (task) {
                socket.emit('addTodo', { task: task, status: "pending" });
                taskValue.value = '';
            }
        }

        function toggleStatus(todoId, isChecked) {
            socket.emit('updateTodoStatus', { id: todoId, status: isChecked ? "completed" : "pending" });
        }

        function editTodo(todoId, oldTask) {
            const newTask = prompt("Edit your task:", oldTask);
            if (newTask !== null && newTask.trim() !== '') {
                socket.emit('editTodo', { id: todoId, task: newTask });
            }
        }

        function deleteTodo(todoId) {
            socket.emit('deleteTodo', { id: todoId });
        }

        function clearAllTasks() {
            if (confirm("Are you sure you want to delete all tasks?")) {
                socket.emit('clearAllTodos');
            }
        }

        function filterTodos() {
            const filterValue = document.getElementById('filter').value;
            socket.emit('filterTodos', { filter: filterValue });
        }
    </script>
</body>

</html>